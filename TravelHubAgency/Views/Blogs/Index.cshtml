@model List<Etiqueta>

<!-- Blog Start -->
<div class="container-xxl py-5 wow fadeInUp" data-wow-delay="0.1s">
    <div class="d-flex justify-content-between mb-2 mx-auto">
        <a asp-controller="Blogs" asp-action="Index" class="btn btn-outline-primary">publicaciones</a>
        <a asp-controller="Blogs" asp-action="PublicarPost" class="btn btn-outline-primary">publicar post</a>
    </div>
    <div class="container py-5">
        <div class="row gap-5">
            <div id="contentPost" class="col-lg-9 wow fadeIn" data-wow-delay="0.2s">
            </div>
            <div class="col-lg-2 mt-5">
                <!-- Etiquetas -->
                <div class="mb-5">
                    <h4 class="text-uppercase mb-4" style="letter-spacing: 5px;">Etiquetas</h4>
                    <div class="d-flex flex-wrap m-n1">
                        @foreach (Etiqueta tag in Model)
                        {
                            <a href="#@tag.Nombre" class="btn btn-light m-1">@tag.Nombre</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Blog End -->
@section Scripts {
    <script>
        $(function () {
            $("#contentPost").load("/Blogs/_Publicaciones?page=1");

            $(document).on("click", ".btn-detail", function () {
                var idpost = $(this).data("idpost");
                $("#contentPost").load("/Blogs/_SingleBlog?idpost=" + idpost);
            });

            document.querySelectorAll(".replays-btn").forEach((btn) => {

                // expand btn
                var replaysBtn = document.querySelectorAll(".replays-btn");
                var comments = document.querySelectorAll(".replays");

                replaysBtn.forEach((btn) => {
                    btn.addEventListener("click", function (e) {
                        var idreplayBlog = e.target.parentElement.dataset.id;


                        comments.forEach((coment) => {
                            var idcometblog = coment.classList[1].split("-")[2];
                            if (idcometblog != idreplayBlog) {
                                coment.classList.remove("show");
                            }
                        });

                        var replaysblog = document.querySelectorAll(
                            ".replay-blog-" + idreplayBlog
                        );

                        replaysblog.forEach((comment) => {
                            var idsreplay = comment;
                            console.log(replaysblog[idsreplay]);

                            if (comment.classList.contains("show")) {
                                comment.classList.remove("show");
                                e.currentTarget.classList.remove("active-replays");
                            } else {
                                comment.classList.add("show");
                                e.currentTarget.classList.add("active-replays");
                            }
                        });
                    });
                });
            });

            // leave a comment
            $(document).on("click", "#sendcomment", function () {
                var idpost = parseInt($("#idpost").val());
                var contenido = $("#contenido").val();

                sendComment(idpost, contenido);
            })

            function sendComment(idpost, contenido) {

                var request = "/Blogs/_SingleBlog?idpost=" + idpost + "&contenido=" + contenido;

                $.ajax({
                    url: request,
                    type: "POST",
                    success: function (data) {
                        console.log(data);
                    }
                })
            }
        });
    </script>
}
@section Styles {
    <style>
        .expand-all-button {
            display: inline-flex;
            align-items: center;
        }

            .expand-all-button label {
                font-size: 14px;
                margin-right: 8px;
            }

            .expand-all-button input[type="checkbox"]:checked {
                background-color: #e8604c;
            }

            .expand-all-button input[type="checkbox"] {
                -webkit-appearance: none;
                -moz-appearance: none;
                appearance: none;
                width: 54px;
                height: 24px;
                border-radius: 12px;
                background-color: rgba(4, 15, 26, 0.15);
                position: relative;
                display: inline-block;
                vertical-align: middle;
                transition: all 0.3s ease;
                cursor: pointer;
            }

        [type="checkbox"],
        [type="radio"] {
            box-sizing: border-box;
            padding: 0;
        }

        .expand-all-button input[type="checkbox"]:checked::before {
            left: 31px;
        }

        .expand-all-button input[type="checkbox"]::before {
            content: "";
            width: 22px;
            height: 22px;
            border-radius: 50%;
            background-color: #fff;
            position: absolute;
            left: 1px;
            top: 1px;
            bottom: 1px;
            transition: all 0.3s ease;
            z-index: 1;
        }

        .expand-all-button input[type="checkbox"]:checked::after {
            content: "ON";
            color: #fff;
            left: 8px;
        }

        .expand-all-button input[type="checkbox"]::after {
            content: "OFF";
            color: rgba(0, 0, 0, 0.32);
            position: absolute;
            top: 50%;
            left: 27px;
            transform: translateY(-50%);
            font-size: 10px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .replays {
            overflow: hidden;
            transition: all 0.5s ease-in-out;
            height: 0;
            will-change: max-height;
        }

            .replays.show {
                height: 125px;
            }

        .replays-btn {
            margin: 0 1em;
            color: rgba(0, 0, 0, 0.32);
            cursor: pointer;
            transition: 0.5s ease-in-out;
        }

            .replays-btn i {
                font-size: 18px;
            }

        .active-replays {
            transform: rotate(180deg);
        }
    </style>
}